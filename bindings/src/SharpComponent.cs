// WARNING - AUTOGENERATED - DO NOT EDIT
// 
using System;
using System.Runtime.InteropServices;

namespace Urho
{
	public class SharpComponent : Component
	{
		[DllImport("mono-urho", CallingConvention = CallingConvention.Cdecl)]
		static extern int SharpComponent_GetType(IntPtr handle);

		[DllImport("mono-urho", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr SharpComponent_SharpComponent0(string typeName, IntPtr context);

		[DllImport("mono-urho", CallingConvention = CallingConvention.Cdecl)]
		static extern int SharpComponent_GetBaseType(IntPtr handle);

		[DllImport("mono-urho", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr SharpComponent_GetTypeName(IntPtr handle);

		[DllImport("mono-urho", CallingConvention = CallingConvention.Cdecl)]
		static extern int SharpComponent_GetTypeStatic();

		[DllImport("mono-urho", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr SharpComponent_GetTypeNameStatic();

		[DllImport("mono-urho", CallingConvention = CallingConvention.Cdecl)]
		static extern void SharpComponent_SetManagedState(IntPtr handle, string state);

		[DllImport("mono-urho", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr SharpComponent_GetName(IntPtr handle);

		[DllImport("mono-urho", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr SharpComponent_GetManagedState(IntPtr handle);

		public SharpComponent(IntPtr handle) : base(handle) {}

		public SharpComponent(UrhoObjectFlag emptyFlag) : base(emptyFlag) {}

		public SharpComponent(Context context) : base(UrhoObjectFlag.Empty)
		{
			var name = GetType().AssemblyQualifiedName;
			handle = SharpComponent_SharpComponent0(name, (object)context == null ? IntPtr.Zero : context.Handle);
			Runtime.RegisterObject(this);
		}

		/// <summary>
		/// Serialized managed state
		/// </summary>
		public string ManagedState
		{
			get { return Marshal.PtrToStringAnsi(SharpComponent_GetManagedState(handle)); }
			set { SharpComponent_SetManagedState(handle, value); }
		}

		/// <summary>
		/// Full name of the component
		/// </summary>
		public string Name => Marshal.PtrToStringAnsi(SharpComponent_GetName(handle));


		//required methods defined by OBJECT(x) macros:

		public new StringHash Type => new StringHash(SharpComponent_GetType(handle));

		public new StringHash BaseType => new StringHash(SharpComponent_GetBaseType(handle));

		public new string TypeName => Marshal.PtrToStringAnsi(SharpComponent_GetTypeName(handle));

		public new static StringHash TypeStatic => new StringHash(SharpComponent_GetTypeStatic());

		public new static string TypeNameStatic => Marshal.PtrToStringAnsi(SharpComponent_GetTypeNameStatic());
	}
}
