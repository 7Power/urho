using System.IO;

namespace SharpieBinder
{
	public class UrhoTypeRegistryGenerator
	{
		string appendedLines = string.Empty;
		readonly string outputDir;
		const string SwitchCasesPlaceholder = "%CASES%";
        const string CsTemplate =
@"// WARNING - AUTOGENERATED - DO NOT EDIT
// 
// Generated using `sharpie urho`
// 
// Copyright 2015 Xamarin Inc. All rights reserved.

using System;

namespace Urho
{
	public partial class UrhoObjectsRegistry
	{
		public static T CreateInstance<T>(IntPtr ptr, int hash) where T : class
		{
			return (T)CreateInstance(ptr, hash);
		}

		public static object CreateInstance(IntPtr ptr, int hash)
		{			
			if (ptr == IntPtr.Zero)
				return null;

			switch (hash)
			{
" + SwitchCasesPlaceholder +
@"
				default: return null;
			}
		}
	}
}";

		public UrhoTypeRegistryGenerator(string outputDir)
		{
			this.outputDir = outputDir;
		}

		public void AppendType(string typeName)
		{
			var code = CalculateTypeHashCode(typeName);
			string line = $"\t\t\t\tcase {code}: return new {typeName}(ptr);\n";
			appendedLines += line;
		}

		public void Flush()
		{
			string content = CsTemplate.Replace(SwitchCasesPlaceholder, appendedLines);
			File.WriteAllText(Path.Combine(outputDir, "UrhoObjectsRegistry.cs"), content);
		}

		/// <summary>
		/// According to StringHash.cpp impl
		/// </summary>
		static int CalculateTypeHashCode(string typeName)
		{
			int hash = 0;
			foreach (var c in typeName)
				hash = char.ToLower(c) + (hash << 6) + (hash << 16) - hash;
			return hash;
		}
	}
}
