<Type Name="EaseCustom" FullName="Urho.Actions.EaseCustom">
  <TypeSignature Language="C#" Value="public class EaseCustom : Urho.Actions.ActionEase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EaseCustom extends Urho.Actions.ActionEase" />
  <AssemblyInfo>
    <AssemblyName>Urho</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Urho.Actions.ActionEase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Custom easing function using a function that provides the easing values.</summary>
    <remarks>This is an easing action that can use a delegate to compute the easing behavior.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EaseCustom (Urho.Actions.FiniteTimeAction action, Func&lt;float,float&gt; easeFunc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Urho.Actions.FiniteTimeAction action, class System.Func`2&lt;float32, float32&gt; easeFunc) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="Urho.Actions.FiniteTimeAction" />
        <Parameter Name="easeFunc" Type="System.Func&lt;System.Single,System.Single&gt;" />
      </Parameters>
      <Docs>
        <param name="action">The easing action that this is wrapping.</param>
        <param name="easeFunc">Function that takes as input the time, and returns the transformed time that should be passed to the underlying wrapped action.</param>
        <summary>Initializes the custom easing function with a function that will apply a distortion over time.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EaseFunc">
      <MemberSignature Language="C#" Value="public Func&lt;float,float&gt; EaseFunc { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;float32, float32&gt; EaseFunc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Single,System.Single&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The configured easing function.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public override Urho.Actions.FiniteTimeAction Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Urho.Actions.FiniteTimeAction Reverse() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Actions.FiniteTimeAction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an <see cref="T:Urho.Actions.ReverseTime" />Â instance of this action.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartAction">
      <MemberSignature Language="C#" Value="protected override Urho.Actions.ActionState StartAction (Urho.Node target);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class Urho.Actions.ActionState StartAction(class Urho.Node target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Actions.ActionState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Urho.Node" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>The new <see cref="T:Urho.Actions.ActionState" /> that encapsulates the state and provides the implementation to perform your action.</para>
        </param>
        <summary>Creates the action state for this action, called on demand from the framework to start executing the recipe.</summary>
        <returns>To be added.</returns>
        <remarks>New action that will perform the inverse of this action</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
