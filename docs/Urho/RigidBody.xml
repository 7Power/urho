<Type Name="RigidBody" FullName="Urho.RigidBody">
  <TypeSignature Language="C#" Value="public class RigidBody : Urho.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RigidBody extends Urho.Component" />
  <AssemblyInfo>
    <AssemblyName>Urho</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Urho.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Physics rigid body component.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RigidBody (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer to the raw unmanaged Urho object.</param>
        <summary>Constructs a new instance of RigidBody, given a raw pointer to an unmanaged object</summary>
        <remarks>
          <para>This creates a new managed wrapper for the type using the raw pointer to an unmanaged object.</para>
          <para>Objects that are created in this fashion get registered with the UrhoSharp runtime.</para>
          <para>This is intended to be used by the UrhoSharp runtime, and is not intended to be used by users.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RigidBody (Urho.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Urho.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="Urho.Context" />
      </Parameters>
      <Docs>
        <param name="context">The context that this object will be attached to.</param>
        <summary>Creates an instance of RigidBody that is attached to an execution context.</summary>
        <remarks>
          <para>This creates an instance of RigidBody attached to the specified execution context.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RigidBody (Urho.UrhoObjectFlag emptyFlag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Urho.UrhoObjectFlag emptyFlag) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="emptyFlag" Type="Urho.UrhoObjectFlag" />
      </Parameters>
      <Docs>
        <param name="emptyFlag">Pass UrhoObjectFlag.Empty.</param>
        <summary>Empty constructor, chain to this constructor when you provide your own constructor that sets the handle field.</summary>
        <remarks>
          <para>This constructor should be invoked by your code if you provide your own constructor that sets the handle field.</para>
          <para>This essentially circumvents the default path that creates a new object and sets the handle and does not call RegisterObject on the target, you must do this on your own constructor.</para>
          <para>You would typically chain to this constructor from your own, and then set the handle to the unmanaged object from your code, and then register your object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Activate() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Activate rigid body if it was resting.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddConstraint">
      <MemberSignature Language="C#" Value="public void AddConstraint (Urho.Constraint constraint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddConstraint(class Urho.Constraint constraint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="Urho.Constraint" />
      </Parameters>
      <Docs>
        <param name="constraint">To be added.</param>
        <summary>
            Add a constraint that refers to this rigid body.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AngularDamping">
      <MemberSignature Language="C#" Value="public float AngularDamping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 AngularDamping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return angular velocity damping factor.
            Or
            Set angular velocity damping factor.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AngularFactor">
      <MemberSignature Language="C#" Value="public Urho.Vector3 AngularFactor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector3 AngularFactor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return angular degrees of freedom.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AngularRestThreshold">
      <MemberSignature Language="C#" Value="public float AngularRestThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 AngularRestThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return angular velocity deactivation threshold.
            Or
            Set angular velocity deactivation threshold.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AngularVelocity">
      <MemberSignature Language="C#" Value="public Urho.Vector3 AngularVelocity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector3 AngularVelocity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return angular velocity.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnisotropicFriction">
      <MemberSignature Language="C#" Value="public Urho.Vector3 AnisotropicFriction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector3 AnisotropicFriction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return anisotropic friction.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAttributes">
      <MemberSignature Language="C#" Value="public override void ApplyAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ApplyAttributes() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Apply attribute changes that can not be applied immediately. Called after scene load or a network update.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyForce">
      <MemberSignature Language="C#" Value="public void ApplyForce (Urho.Vector3 force);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyForce(valuetype Urho.Vector3 force) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="force" Type="Urho.Vector3" />
      </Parameters>
      <Docs>
        <param name="force">To be added.</param>
        <summary>
            Apply force to center of mass.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyForce">
      <MemberSignature Language="C#" Value="public void ApplyForce (Urho.Vector3 force, Urho.Vector3 position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyForce(valuetype Urho.Vector3 force, valuetype Urho.Vector3 position) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="force" Type="Urho.Vector3" />
        <Parameter Name="position" Type="Urho.Vector3" />
      </Parameters>
      <Docs>
        <param name="force">To be added.</param>
        <param name="position">To be added.</param>
        <summary>
            Apply force at local position.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyImpulse">
      <MemberSignature Language="C#" Value="public void ApplyImpulse (Urho.Vector3 impulse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyImpulse(valuetype Urho.Vector3 impulse) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="impulse" Type="Urho.Vector3" />
      </Parameters>
      <Docs>
        <param name="impulse">To be added.</param>
        <summary>
            Apply impulse to center of mass.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyImpulse">
      <MemberSignature Language="C#" Value="public void ApplyImpulse (Urho.Vector3 impulse, Urho.Vector3 position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyImpulse(valuetype Urho.Vector3 impulse, valuetype Urho.Vector3 position) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="impulse" Type="Urho.Vector3" />
        <Parameter Name="position" Type="Urho.Vector3" />
      </Parameters>
      <Docs>
        <param name="impulse">To be added.</param>
        <param name="position">To be added.</param>
        <summary>
            Apply impulse at local position.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyTorque">
      <MemberSignature Language="C#" Value="public void ApplyTorque (Urho.Vector3 torque);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyTorque(valuetype Urho.Vector3 torque) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="torque" Type="Urho.Vector3" />
      </Parameters>
      <Docs>
        <param name="torque">To be added.</param>
        <summary>
            Apply torque.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyTorqueImpulse">
      <MemberSignature Language="C#" Value="public void ApplyTorqueImpulse (Urho.Vector3 torque);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyTorqueImpulse(valuetype Urho.Vector3 torque) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="torque" Type="Urho.Vector3" />
      </Parameters>
      <Docs>
        <param name="torque">To be added.</param>
        <summary>
            Apply torque impulse.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyWorldTransform">
      <MemberSignature Language="C#" Value="public void ApplyWorldTransform (Urho.Vector3 newWorldPosition, Urho.Quaternion newWorldRotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyWorldTransform(valuetype Urho.Vector3 newWorldPosition, valuetype Urho.Quaternion newWorldRotation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newWorldPosition" Type="Urho.Vector3" />
        <Parameter Name="newWorldRotation" Type="Urho.Quaternion" />
      </Parameters>
      <Docs>
        <param name="newWorldPosition">To be added.</param>
        <param name="newWorldRotation">To be added.</param>
        <summary>
            Apply new world transform after a simulation step. Called internally.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public override Urho.StringHash BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.StringHash BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.StringHash</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's type system base type.</summary>
        <value>StringHash representing the base type for this Urho type.</value>
        <remarks>This returns the Urho type system base type and is surfaced for low-level Urho code.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CcdMotionThreshold">
      <MemberSignature Language="C#" Value="public float CcdMotionThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 CcdMotionThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return continuous collision detection motion-per-simulation-step threshold.
            Or
            Set continuous collision detection motion-per-simulation-step threshold. 0 disables, which is the default.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CcdRadius">
      <MemberSignature Language="C#" Value="public float CcdRadius { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 CcdRadius" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return continuous collision detection swept sphere radius.
            Or
            Set continuous collision detection swept sphere radius.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CenterOfMass">
      <MemberSignature Language="C#" Value="public Urho.Vector3 CenterOfMass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector3 CenterOfMass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return center of mass offset.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollisionEventMode">
      <MemberSignature Language="C#" Value="public Urho.CollisionEventMode CollisionEventMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.CollisionEventMode CollisionEventMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.CollisionEventMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return collision event signaling mode.
            Or
            Set collision event signaling mode. Default is to signal when rigid bodies are active.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollisionLayer">
      <MemberSignature Language="C#" Value="public uint CollisionLayer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 CollisionLayer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return collision layer.
            Or
            Set collision layer.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollisionMask">
      <MemberSignature Language="C#" Value="public uint CollisionMask { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 CollisionMask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return collision mask.
            Or
            Set collision mask.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContactProcessingThreshold">
      <MemberSignature Language="C#" Value="public float ContactProcessingThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 ContactProcessingThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return contact processing threshold.
            Or
            Set contact processing threshold.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableMassUpdate">
      <MemberSignature Language="C#" Value="public void DisableMassUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisableMassUpdate() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Disable mass update. Call this to optimize performance when adding or editing multiple collision shapes in the same node.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawDebugGeometry">
      <MemberSignature Language="C#" Value="public override void DrawDebugGeometry (Urho.DebugRenderer debug, bool depthTest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DrawDebugGeometry(class Urho.DebugRenderer debug, bool depthTest) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="debug" Type="Urho.DebugRenderer" />
        <Parameter Name="depthTest" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="debug">To be added.</param>
        <param name="depthTest">To be added.</param>
        <summary>
            Visualize the component as debug geometry.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableMassUpdate">
      <MemberSignature Language="C#" Value="public void EnableMassUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnableMassUpdate() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Re-enable mass update and recalculate the mass/inertia by calling UpdateMass(). Call when collision shape changes are finished.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Friction">
      <MemberSignature Language="C#" Value="public float Friction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Friction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return friction coefficient.
            Or
            Set friction coefficient.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVelocityAtPoint">
      <MemberSignature Language="C#" Value="public Urho.Vector3 GetVelocityAtPoint (Urho.Vector3 position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Urho.Vector3 GetVelocityAtPoint(valuetype Urho.Vector3 position) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="Urho.Vector3" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <summary>
            Return linear velocity at local point.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GravityOverride">
      <MemberSignature Language="C#" Value="public Urho.Vector3 GravityOverride { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector3 GravityOverride" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return gravity override. If zero (default), uses the physics world's gravity.
            Or
            Set gravity override. If zero, uses physics world's gravity.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsActive">
      <MemberSignature Language="C#" Value="public bool IsActive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsActive() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Return whether rigid body is active (not sleeping.)
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKinematic">
      <MemberSignature Language="C#" Value="public bool IsKinematic ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsKinematic() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Return kinematic mode flag.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTrigger">
      <MemberSignature Language="C#" Value="public bool IsTrigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsTrigger() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Return whether this RigidBody is acting as a trigger.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinearDamping">
      <MemberSignature Language="C#" Value="public float LinearDamping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 LinearDamping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return linear velocity damping factor.
            Or
            Set linear velocity damping factor.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinearFactor">
      <MemberSignature Language="C#" Value="public Urho.Vector3 LinearFactor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector3 LinearFactor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return linear degrees of freedom.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinearRestThreshold">
      <MemberSignature Language="C#" Value="public float LinearRestThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 LinearRestThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return linear velocity deactivation threshold.
            Or
            Set linear velocity deactivation threshold.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinearVelocity">
      <MemberSignature Language="C#" Value="public Urho.Vector3 LinearVelocity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector3 LinearVelocity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return linear velocity.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mass">
      <MemberSignature Language="C#" Value="public float Mass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Mass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return mass.
            Or
            Set mass. Zero mass makes the body static.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSetEnabled">
      <MemberSignature Language="C#" Value="public override void OnSetEnabled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnSetEnabled() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Handle enabled/disabled state change.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PhysicsWorld">
      <MemberSignature Language="C#" Value="public Urho.PhysicsWorld PhysicsWorld { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Urho.PhysicsWorld PhysicsWorld" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.PhysicsWorld</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return physics world.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public Urho.Vector3 Position { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector3 Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return rigid body position in world space.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReAddBodyToWorld">
      <MemberSignature Language="C#" Value="public void ReAddBodyToWorld ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReAddBodyToWorld() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Readd rigid body to the physics world to clean up internal state like stale contacts.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterObject">
      <MemberSignature Language="C#" Value="public static void RegisterObject (Urho.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterObject(class Urho.Context context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Urho.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
            Register object factory.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseBody">
      <MemberSignature Language="C#" Value="public void ReleaseBody ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseBody() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Remove the rigid body.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveConstraint">
      <MemberSignature Language="C#" Value="public void RemoveConstraint (Urho.Constraint constraint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveConstraint(class Urho.Constraint constraint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="Urho.Constraint" />
      </Parameters>
      <Docs>
        <param name="constraint">To be added.</param>
        <summary>
            Remove a constraint that refers to this rigid body.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetForces">
      <MemberSignature Language="C#" Value="public void ResetForces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetForces() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Reset accumulated forces.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Restitution">
      <MemberSignature Language="C#" Value="public float Restitution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Restitution" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return restitution coefficient.
            Or
            Set restitution coefficient.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RollingFriction">
      <MemberSignature Language="C#" Value="public float RollingFriction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 RollingFriction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return rolling friction coefficient.
            Or
            Set rolling friction coefficient.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public Urho.Quaternion Rotation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Quaternion Rotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Quaternion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return rigid body rotation in world space.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAngularFactor">
      <MemberSignature Language="C#" Value="public void SetAngularFactor (Urho.Vector3 factor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAngularFactor(valuetype Urho.Vector3 factor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="Urho.Vector3" />
      </Parameters>
      <Docs>
        <param name="factor">To be added.</param>
        <summary>
            Set angular degrees of freedom. Use 1 to enable an axis or 0 to disable. Default is all axes enabled (1, 1, 1).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAngularVelocity">
      <MemberSignature Language="C#" Value="public void SetAngularVelocity (Urho.Vector3 angularVelocity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAngularVelocity(valuetype Urho.Vector3 angularVelocity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angularVelocity" Type="Urho.Vector3" />
      </Parameters>
      <Docs>
        <param name="angularVelocity">To be added.</param>
        <summary>
            Set angular velocity.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAnisotropicFriction">
      <MemberSignature Language="C#" Value="public void SetAnisotropicFriction (Urho.Vector3 friction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAnisotropicFriction(valuetype Urho.Vector3 friction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="friction" Type="Urho.Vector3" />
      </Parameters>
      <Docs>
        <param name="friction">To be added.</param>
        <summary>
            Set anisotropic friction.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCollisionLayerAndMask">
      <MemberSignature Language="C#" Value="public void SetCollisionLayerAndMask (uint layer, uint mask);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCollisionLayerAndMask(unsigned int32 layer, unsigned int32 mask) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layer" Type="System.UInt32" />
        <Parameter Name="mask" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="layer">To be added.</param>
        <param name="mask">To be added.</param>
        <summary>
            Set collision group and mask.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetKinematic">
      <MemberSignature Language="C#" Value="public void SetKinematic (bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetKinematic(bool enable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enable">To be added.</param>
        <summary>
            Set rigid body kinematic mode. In kinematic mode forces are not applied to the rigid body.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLinearFactor">
      <MemberSignature Language="C#" Value="public void SetLinearFactor (Urho.Vector3 factor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLinearFactor(valuetype Urho.Vector3 factor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="Urho.Vector3" />
      </Parameters>
      <Docs>
        <param name="factor">To be added.</param>
        <summary>
            Set linear degrees of freedom. Use 1 to enable an axis or 0 to disable. Default is all axes enabled (1, 1, 1).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLinearVelocity">
      <MemberSignature Language="C#" Value="public void SetLinearVelocity (Urho.Vector3 velocity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLinearVelocity(valuetype Urho.Vector3 velocity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="velocity" Type="Urho.Vector3" />
      </Parameters>
      <Docs>
        <param name="velocity">To be added.</param>
        <summary>
            Set linear velocity.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPosition">
      <MemberSignature Language="C#" Value="public void SetPosition (Urho.Vector3 position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPosition(valuetype Urho.Vector3 position) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="Urho.Vector3" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <summary>
            Set rigid body position in world space.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRotation">
      <MemberSignature Language="C#" Value="public void SetRotation (Urho.Quaternion rotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRotation(valuetype Urho.Quaternion rotation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rotation" Type="Urho.Quaternion" />
      </Parameters>
      <Docs>
        <param name="rotation">To be added.</param>
        <summary>
            Set rigid body rotation in world space.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTransform">
      <MemberSignature Language="C#" Value="public void SetTransform (Urho.Vector3 position, Urho.Quaternion rotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTransform(valuetype Urho.Vector3 position, valuetype Urho.Quaternion rotation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="Urho.Vector3" />
        <Parameter Name="rotation" Type="Urho.Quaternion" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <param name="rotation">To be added.</param>
        <summary>
            Set rigid body position and rotation in world space as an atomic operation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTrigger">
      <MemberSignature Language="C#" Value="public void SetTrigger (bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTrigger(bool enable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enable">To be added.</param>
        <summary>
            Set rigid body trigger mode. In trigger mode collisions are reported but do not apply forces.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public override Urho.StringHash Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.StringHash Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.StringHash</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's type system type.</summary>
        <value>StringHash representing the type for this C# type.</value>
        <remarks>This returns the Urho's type and is surfaced for low-level Urho code.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public override string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's low-level type name.</summary>
        <value>Stringified low-level type name.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeNameStatic">
      <MemberSignature Language="C#" Value="public static string TypeNameStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string TypeNameStatic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's low-level type name, accessible as a static method.</summary>
        <value>Stringified low-level type name.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeStatic">
      <MemberSignature Language="C#" Value="public static Urho.StringHash TypeStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Urho.StringHash TypeStatic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.StringHash</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateGravity">
      <MemberSignature Language="C#" Value="public void UpdateGravity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateGravity() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Update gravity parameters to the Bullet rigid body.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateMass">
      <MemberSignature Language="C#" Value="public void UpdateMass ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateMass() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Update mass and inertia to the Bullet rigid body.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseGravity">
      <MemberSignature Language="C#" Value="public bool UseGravity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseGravity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return whether rigid body uses gravity.
            Or
            Set whether gravity is applied to rigid body.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
