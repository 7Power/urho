<Type Name="CallFuncND" FullName="Urho.CallFuncND">
  <TypeSignature Language="C#" Value="public class CallFuncND : Urho.CallFuncN" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallFuncND extends Urho.CallFuncN" />
  <AssemblyInfo>
    <AssemblyName>Urho</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Urho.CallFuncN</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallFuncND (Action&lt;Urho.Node,object&gt; selector, object d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Action`2&lt;class Urho.Node, object&gt; selector, object d) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selector" Type="System.Action&lt;Urho.Node,System.Object&gt;" />
        <Parameter Name="d" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="selector">To be added.</param>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallFunctionND">
      <MemberSignature Language="C#" Value="public Action&lt;Urho.Node,object&gt; CallFunctionND { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`2&lt;class Urho.Node, object&gt; CallFunctionND" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Urho.Node,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public object Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartAction">
      <MemberSignature Language="C#" Value="protected override Urho.ActionState StartAction (Urho.Node target);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class Urho.ActionState StartAction(class Urho.Node target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.ActionState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Urho.Node" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>The new <see cref="T:Urho.ActionState" /> that encapsulates the state and provides the implementation to perform your action.</para>
        </param>
        <summary>Creates the action state for this action, called on demand from the framework to start executing the recipe.</summary>
        <returns>To be added.</returns>
        <remarks>New action that will perform the inverse of this action</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
