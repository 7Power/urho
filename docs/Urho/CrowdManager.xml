<Type Name="CrowdManager" FullName="Urho.CrowdManager">
  <TypeSignature Language="C#" Value="public class CrowdManager : Urho.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CrowdManager extends Urho.Component" />
  <AssemblyInfo>
    <AssemblyName>Urho</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Urho.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Crowd manager scene component. Should be added only to the root scene node.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CrowdManager (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CrowdManager (Urho.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Urho.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="Urho.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CrowdManager (Urho.UrhoObjectFlag emptyFlag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Urho.UrhoObjectFlag emptyFlag) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="emptyFlag" Type="Urho.UrhoObjectFlag" />
      </Parameters>
      <Docs>
        <param name="emptyFlag">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAttributes">
      <MemberSignature Language="C#" Value="public override void ApplyAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ApplyAttributes() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Apply attribute changes that can not be applied immediately. Called after scene load or a network update.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public override Urho.StringHash BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.StringHash BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.StringHash</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawDebugGeometry">
      <MemberSignature Language="C#" Value="public void DrawDebugGeometry (bool depthTest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawDebugGeometry(bool depthTest) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="depthTest" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="depthTest">To be added.</param>
        <summary>
            Add debug geometry to the debug renderer.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawDebugGeometry">
      <MemberSignature Language="C#" Value="public override void DrawDebugGeometry (Urho.DebugRenderer debug, bool depthTest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DrawDebugGeometry(class Urho.DebugRenderer debug, bool depthTest) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="debug" Type="Urho.DebugRenderer" />
        <Parameter Name="depthTest" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="debug">To be added.</param>
        <param name="depthTest">To be added.</param>
        <summary>
            Draw the agents' pathing debug data.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindNearestPoint">
      <MemberSignature Language="C#" Value="public Urho.Vector3 FindNearestPoint (Urho.Vector3 point, int queryFilterType, uint* nearestRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Urho.Vector3 FindNearestPoint(valuetype Urho.Vector3 point, int32 queryFilterType, unsigned int32* nearestRef) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="Urho.Vector3" />
        <Parameter Name="queryFilterType" Type="System.Int32" />
        <Parameter Name="nearestRef" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <param name="queryFilterType">To be added.</param>
        <param name="nearestRef">To be added.</param>
        <summary>
            Find the nearest point on the navigation mesh to a given point using the crowd initialized query extent (based on maxAgentRadius) and the specified query filter type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAreaCost">
      <MemberSignature Language="C#" Value="public float GetAreaCost (uint queryFilterType, uint areaID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 GetAreaCost(unsigned int32 queryFilterType, unsigned int32 areaID) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryFilterType" Type="System.UInt32" />
        <Parameter Name="areaID" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="queryFilterType">To be added.</param>
        <param name="areaID">To be added.</param>
        <summary>
            Get the cost of an area for the specified query filter type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDistanceToWall">
      <MemberSignature Language="C#" Value="public float GetDistanceToWall (Urho.Vector3 point, float radius, int queryFilterType, Urho.Vector3* hitPos, Urho.Vector3* hitNormal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 GetDistanceToWall(valuetype Urho.Vector3 point, float32 radius, int32 queryFilterType, valuetype Urho.Vector3* hitPos, valuetype Urho.Vector3* hitNormal) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="Urho.Vector3" />
        <Parameter Name="radius" Type="System.Single" />
        <Parameter Name="queryFilterType" Type="System.Int32" />
        <Parameter Name="hitPos" Type="Urho.Vector3*" />
        <Parameter Name="hitNormal" Type="Urho.Vector3*" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <param name="radius">To be added.</param>
        <param name="queryFilterType">To be added.</param>
        <param name="hitPos">To be added.</param>
        <param name="hitNormal">To be added.</param>
        <summary>
            Return distance to wall from a point using the crowd initialized query extent (based on maxAgentRadius) and the specified query filter type. Maximum search radius must be specified.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExcludeFlags">
      <MemberSignature Language="C#" Value="public ushort GetExcludeFlags (uint queryFilterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int16 GetExcludeFlags(unsigned int32 queryFilterType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryFilterType" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="queryFilterType">To be added.</param>
        <summary>
            Get the exclude flags for the specified query filter type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIncludeFlags">
      <MemberSignature Language="C#" Value="public ushort GetIncludeFlags (uint queryFilterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int16 GetIncludeFlags(unsigned int32 queryFilterType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryFilterType" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="queryFilterType">To be added.</param>
        <summary>
            Get the include flags for the specified query filter type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumAreas">
      <MemberSignature Language="C#" Value="public uint GetNumAreas (uint queryFilterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int32 GetNumAreas(unsigned int32 queryFilterType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryFilterType" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="queryFilterType">To be added.</param>
        <summary>
            Get the number of configured area in the specified query filter type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObstacleAvoidanceParams">
      <MemberSignature Language="C#" Value="public Urho.CrowdObstacleAvoidanceParams GetObstacleAvoidanceParams (uint obstacleAvoidanceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Urho.CrowdObstacleAvoidanceParams GetObstacleAvoidanceParams(unsigned int32 obstacleAvoidanceType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.CrowdObstacleAvoidanceParams</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obstacleAvoidanceType" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="obstacleAvoidanceType">To be added.</param>
        <summary>
            Get the params for the specified obstacle avoidance type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRandomPoint">
      <MemberSignature Language="C#" Value="public Urho.Vector3 GetRandomPoint (int queryFilterType, uint* randomRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Urho.Vector3 GetRandomPoint(int32 queryFilterType, unsigned int32* randomRef) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryFilterType" Type="System.Int32" />
        <Parameter Name="randomRef" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="queryFilterType">To be added.</param>
        <param name="randomRef">To be added.</param>
        <summary>
            Return a random point on the navigation mesh using the crowd initialized query extent (based on maxAgentRadius) and the specified query filter type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRandomPointInCircle">
      <MemberSignature Language="C#" Value="public Urho.Vector3 GetRandomPointInCircle (Urho.Vector3 center, float radius, int queryFilterType, uint* randomRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Urho.Vector3 GetRandomPointInCircle(valuetype Urho.Vector3 center, float32 radius, int32 queryFilterType, unsigned int32* randomRef) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="center" Type="Urho.Vector3" />
        <Parameter Name="radius" Type="System.Single" />
        <Parameter Name="queryFilterType" Type="System.Int32" />
        <Parameter Name="randomRef" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="center">To be added.</param>
        <param name="radius">To be added.</param>
        <param name="queryFilterType">To be added.</param>
        <param name="randomRef">To be added.</param>
        <summary>
            Return a random point on the navigation mesh within a circle using the crowd initialized query extent (based on maxAgentRadius) and the specified query filter type. The circle radius is only a guideline and in practice the returned point may be further away.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAgentRadius">
      <MemberSignature Language="C#" Value="public float MaxAgentRadius { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MaxAgentRadius" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the maximum radius of any agent.
            Or
            Set the maximum radius of any agent.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAgents">
      <MemberSignature Language="C#" Value="public uint MaxAgents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 MaxAgents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the maximum number of agents.
            Or
            Set the maximum number of agents.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveAlongSurface">
      <MemberSignature Language="C#" Value="public Urho.Vector3 MoveAlongSurface (Urho.Vector3 start, Urho.Vector3 end, int queryFilterType, int maxVisited);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Urho.Vector3 MoveAlongSurface(valuetype Urho.Vector3 start, valuetype Urho.Vector3 end, int32 queryFilterType, int32 maxVisited) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="Urho.Vector3" />
        <Parameter Name="end" Type="Urho.Vector3" />
        <Parameter Name="queryFilterType" Type="System.Int32" />
        <Parameter Name="maxVisited" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <param name="queryFilterType">To be added.</param>
        <param name="maxVisited">To be added.</param>
        <summary>
            Try to move along the surface from one point to another using the crowd initialized query extent (based on maxAgentRadius) and the specified query filter type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationMesh">
      <MemberSignature Language="C#" Value="public Urho.NavigationMesh NavigationMesh { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Urho.NavigationMesh NavigationMesh" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.NavigationMesh</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the Navigation mesh assigned to the crowd.
            Or
            Assigns the navigation mesh for the crowd.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumObstacleAvoidanceTypes">
      <MemberSignature Language="C#" Value="public uint NumObstacleAvoidanceTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 NumObstacleAvoidanceTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the number of configured obstacle avoidance types.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumQueryFilterTypes">
      <MemberSignature Language="C#" Value="public uint NumQueryFilterTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 NumQueryFilterTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the number of configured query filter types.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Raycast">
      <MemberSignature Language="C#" Value="public Urho.Vector3 Raycast (Urho.Vector3 start, Urho.Vector3 end, int queryFilterType, Urho.Vector3* hitNormal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Urho.Vector3 Raycast(valuetype Urho.Vector3 start, valuetype Urho.Vector3 end, int32 queryFilterType, valuetype Urho.Vector3* hitNormal) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="Urho.Vector3" />
        <Parameter Name="end" Type="Urho.Vector3" />
        <Parameter Name="queryFilterType" Type="System.Int32" />
        <Parameter Name="hitNormal" Type="Urho.Vector3*" />
      </Parameters>
      <Docs>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <param name="queryFilterType">To be added.</param>
        <param name="hitNormal">To be added.</param>
        <summary>
            Perform a walkability raycast on the navigation mesh between start and end using the crowd initialized query extent (based on maxAgentRadius) and the specified query filter type. Return the point where a wall was hit, or the end point if no walls.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterObject">
      <MemberSignature Language="C#" Value="public static void RegisterObject (Urho.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterObject(class Urho.Context context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Urho.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
            Register object factory.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetCrowdTarget">
      <MemberSignature Language="C#" Value="public void ResetCrowdTarget (Urho.Node node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCrowdTarget(class Urho.Node node) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Urho.Node" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>
            Reset any crowd target for all crowd agents found in the specified node. Defaulted to scene node.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAreaCost">
      <MemberSignature Language="C#" Value="public void SetAreaCost (uint queryFilterType, uint areaID, float cost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAreaCost(unsigned int32 queryFilterType, unsigned int32 areaID, float32 cost) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryFilterType" Type="System.UInt32" />
        <Parameter Name="areaID" Type="System.UInt32" />
        <Parameter Name="cost" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="queryFilterType">To be added.</param>
        <param name="areaID">To be added.</param>
        <param name="cost">To be added.</param>
        <summary>
            Set the cost of an area for the specified query filter type.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCrowdTarget">
      <MemberSignature Language="C#" Value="public void SetCrowdTarget (Urho.Vector3 position, Urho.Node node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCrowdTarget(valuetype Urho.Vector3 position, class Urho.Node node) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="Urho.Vector3" />
        <Parameter Name="node" Type="Urho.Node" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <param name="node">To be added.</param>
        <summary>
            Set the crowd target position. The target position is set to all crowd agents found in the specified node. Defaulted to scene node.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCrowdVelocity">
      <MemberSignature Language="C#" Value="public void SetCrowdVelocity (Urho.Vector3 velocity, Urho.Node node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCrowdVelocity(valuetype Urho.Vector3 velocity, class Urho.Node node) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="velocity" Type="Urho.Vector3" />
        <Parameter Name="node" Type="Urho.Node" />
      </Parameters>
      <Docs>
        <param name="velocity">To be added.</param>
        <param name="node">To be added.</param>
        <summary>
            Set the crowd move velocity. The move velocity is applied to all crowd agents found in the specified node. Defaulted to scene node.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetExcludeFlags">
      <MemberSignature Language="C#" Value="public void SetExcludeFlags (uint queryFilterType, ushort flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetExcludeFlags(unsigned int32 queryFilterType, unsigned int16 flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryFilterType" Type="System.UInt32" />
        <Parameter Name="flags" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="queryFilterType">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>
            Set the exclude flags for the specified query filter type.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIncludeFlags">
      <MemberSignature Language="C#" Value="public void SetIncludeFlags (uint queryFilterType, ushort flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetIncludeFlags(unsigned int32 queryFilterType, unsigned int16 flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryFilterType" Type="System.UInt32" />
        <Parameter Name="flags" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="queryFilterType">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>
            Set the include flags for the specified query filter type.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetObstacleAvoidanceParams">
      <MemberSignature Language="C#" Value="public void SetObstacleAvoidanceParams (uint obstacleAvoidanceType, Urho.CrowdObstacleAvoidanceParams params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetObstacleAvoidanceParams(unsigned int32 obstacleAvoidanceType, valuetype Urho.CrowdObstacleAvoidanceParams params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obstacleAvoidanceType" Type="System.UInt32" />
        <Parameter Name="params" Type="Urho.CrowdObstacleAvoidanceParams" />
      </Parameters>
      <Docs>
        <param name="obstacleAvoidanceType">To be added.</param>
        <param name="params">To be added.</param>
        <summary>
            Set the params for the specified obstacle avoidance type.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public override Urho.StringHash Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.StringHash Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.StringHash</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public override string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeNameStatic">
      <MemberSignature Language="C#" Value="public static string TypeNameStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string TypeNameStatic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeStatic">
      <MemberSignature Language="C#" Value="public static Urho.StringHash TypeStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Urho.StringHash TypeStatic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.StringHash</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
